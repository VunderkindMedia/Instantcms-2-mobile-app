{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["PrivateValueStore","useNavigationHelpers","onAction","getState","emitter","router","resetRoot","React","useContext","ResetRootContext","parentNavigationHelpers","NavigationContext","NavigationStateContext","performTransaction","useMemo","dispatch","action","payload","handled","process","env","NODE_ENV","console","error","type","JSON","stringify","actions","actionCreators","CommonActions","helpers","Object","keys","reduce","acc","name","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList"],"mappings":"oWAAA,oDACA,sEACA,8EACA,4EACA,0DAEA,8B,yyBAYAA,yBAgBe,QAASC,CAAAA,oBAAT,MAIoD,IAA/DC,CAAAA,QAA+D,MAA/DA,QAA+D,CAArDC,QAAqD,MAArDA,QAAqD,CAA3CC,OAA2C,MAA3CA,OAA2C,CAAlCC,MAAkC,MAAlCA,MAAkC,CACjE,GAAMC,CAAAA,SAAS,CAAGC,KAAK,CAACC,UAAN,CAAiBC,yBAAjB,CAAlB,CACA,GAAMC,CAAAA,uBAAuB,CAAGH,KAAK,CAACC,UAAN,CAAiBG,0BAAjB,CAAhC,CAFiE,sBAGlCJ,KAAK,CAACC,UAAN,CAAiBI,2CAAjB,CAHkC,CAGzDC,kBAHyD,mBAGzDA,kBAHyD,CAKjE,MAAON,CAAAA,KAAK,CAACO,OAAN,CAAc,UAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAiD,CAChEH,kBAAkB,CAAC,UAAM,CACvB,GAAMI,CAAAA,OAAO,CACX,MAAOD,CAAAA,MAAP,GAAkB,UAAlB,CAA+BA,MAAM,CAACb,QAAQ,EAAT,CAArC,CAAoDa,MADtD,CAGA,GAAME,CAAAA,OAAO,CAAGhB,QAAQ,CAACe,OAAD,CAAxB,CAEA,GAAI,CAACC,OAAD,EAAYC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzC,CAAuD,CACrDC,OAAO,CAACC,KAAR,gBACiBN,OAAO,CAACO,IADzB,oBACgDC,IAAI,CAACC,SAAL,CAC5CT,OAAO,CAACA,OADoC,CADhD,wCAKD,CACF,CAbiB,CAAlB,CAcD,CAfD,CAiBA,GAAMU,CAAAA,OAAO,kBACRtB,MAAM,CAACuB,cADC,IAERC,aAFQ,CAAb,CAKA,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,MAArB,CACd,SAACC,GAAD,CAAMC,IAAN,CAAe,CAEbD,GAAG,CAACC,IAAD,CAAH,CAAY,iBAAkBpB,CAAAA,QAAQ,CAACY,OAAO,CAACQ,IAAD,CAAP,OAAAR,OAAO,WAAR,CAA1B,EAAZ,CACA,MAAOO,CAAAA,GAAP,CACD,CALa,CAMd,EANc,CAAhB,CASA,wBACKxB,uBADL,IAEKoB,OAFL,EAGExB,SAAS,CAATA,SAHF,CAIES,QAAQ,CAARA,QAJF,CAKEqB,IAAI,CAAEhC,OAAO,CAACgC,IALhB,CAMEC,SAAS,CAAE3B,uBAAuB,CAC9BA,uBAAuB,CAAC2B,SADM,CAE9B,iBAAM,KAAN,EARN,CASEC,SAAS,CAAE,oBAAM,CACf,GAAMC,CAAAA,KAAK,CAAGpC,QAAQ,EAAtB,CAEA,MACEE,CAAAA,MAAM,CAACmC,iBAAP,CAAyBD,KAAzB,CAAgCV,aAAa,CAACY,MAAd,EAAhC,CAAkE,CAChEC,UAAU,CAAEH,KAAK,CAACG,UAD8C,CAEhEC,cAAc,CAAE,EAFgD,CAAlE,IAGO,IAHP,GAIAjC,uBAJA,cAIAA,uBAAuB,CAAE4B,SAAzB,EAJA,GAKA,KANF,CAQD,CApBH,GAuBD,CAvDM,CAuDJ,CACDjC,MADC,CAEDF,QAFC,CAGDO,uBAHC,CAIDJ,SAJC,CAKDF,OAAO,CAACgC,IALP,CAMDvB,kBANC,CAODX,QAPC,CAvDI,CAAP,CAgED","sourcesContent":["import * as React from 'react';\nimport * as CommonActions from './CommonActions';\nimport NavigationContext from './NavigationContext';\nimport ResetRootContext from './ResetRootContext';\nimport { NavigationStateContext } from './NavigationContainer';\nimport { NavigationEventEmitter } from './useEventEmitter';\nimport {\n  NavigationHelpers,\n  NavigationProp,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n  PrivateValueStore,\n} from './types';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  onAction: (\n    action: NavigationAction,\n    visitedNavigators?: Set<string>\n  ) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({ onAction, getState, emitter, router }: Options<State, Action>) {\n  const resetRoot = React.useContext(ResetRootContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n  const { performTransaction } = React.useContext(NavigationStateContext);\n\n  return React.useMemo(() => {\n    const dispatch = (action: Action | ((state: State) => Action)) => {\n      performTransaction(() => {\n        const payload =\n          typeof action === 'function' ? action(getState()) : action;\n\n        const handled = onAction(payload);\n\n        if (!handled && process.env.NODE_ENV !== 'production') {\n          console.error(\n            `The action '${payload.type}' with payload '${JSON.stringify(\n              payload.payload\n            )}' was not handled by any navigator.`\n          );\n        }\n      });\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\n      (acc, name) => {\n        // @ts-ignore\n        acc[name] = (...args: any) => dispatch(actions[name](...args));\n        return acc;\n      },\n      {}\n    );\n\n    return {\n      ...parentNavigationHelpers,\n      ...helpers,\n      resetRoot,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n    } as NavigationHelpers<ParamListBase, EventMap> &\n      (NavigationProp<ParamListBase, string, any, any, any> | undefined);\n  }, [\n    router,\n    getState,\n    parentNavigationHelpers,\n    resetRoot,\n    emitter.emit,\n    performTransaction,\n    onAction,\n  ]);\n}\n"]}