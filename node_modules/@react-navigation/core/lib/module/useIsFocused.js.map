{"version":3,"sources":["useIsFocused.tsx"],"names":["React","useSubscription","useNavigation","useIsFocused","navigation","getCurrentValue","useCallback","isFocused","subscribe","callback","unsubscribeFocus","addListener","unsubscribeBlur"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,eAAT,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAOA,cAAe,SAASC,CAAAA,YAAT,EAAiC,CAC9C,GAAMC,CAAAA,UAAU,CAAGF,aAAa,EAAhC,CACA,GAAMG,CAAAA,eAAe,CAAGL,KAAK,CAACM,WAAN,CAAkBF,UAAU,CAACG,SAA7B,CAAwC,CAACH,UAAD,CAAxC,CAAxB,CACA,GAAMI,CAAAA,SAAS,CAAGR,KAAK,CAACM,WAAN,CAChB,SAACG,QAAD,CAAwC,CACtC,GAAMC,CAAAA,gBAAgB,CAAGN,UAAU,CAACO,WAAX,CAAuB,OAAvB,CAAgC,iBACvDF,CAAAA,QAAQ,CAAC,IAAD,CAD+C,EAAhC,CAAzB,CAIA,GAAMG,CAAAA,eAAe,CAAGR,UAAU,CAACO,WAAX,CAAuB,MAAvB,CAA+B,iBACrDF,CAAAA,QAAQ,CAAC,KAAD,CAD6C,EAA/B,CAAxB,CAIA,MAAO,WAAM,CACXC,gBAAgB,GAChBE,eAAe,GAChB,CAHD,CAID,CAde,CAehB,CAACR,UAAD,CAfgB,CAAlB,CAkBA,MAAOH,CAAAA,eAAe,CAAC,CACrBI,eAAe,CAAfA,eADqB,CAErBG,SAAS,CAATA,SAFqB,CAAD,CAAtB,CAID","sourcesContent":["import * as React from 'react';\nimport { useSubscription } from 'use-subscription';\nimport useNavigation from './useNavigation';\n\n/**\n * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n * This can be used if a component needs to render something based on the focus state.\n * It uses `use-subscription` under the hood for safer use in concurrent mode.\n */\nexport default function useIsFocused(): boolean {\n  const navigation = useNavigation();\n  const getCurrentValue = React.useCallback(navigation.isFocused, [navigation]);\n  const subscribe = React.useCallback(\n    (callback: (value: boolean) => void) => {\n      const unsubscribeFocus = navigation.addListener('focus', () =>\n        callback(true)\n      );\n\n      const unsubscribeBlur = navigation.addListener('blur', () =>\n        callback(false)\n      );\n\n      return () => {\n        unsubscribeFocus();\n        unsubscribeBlur();\n      };\n    },\n    [navigation]\n  );\n\n  return useSubscription({\n    getCurrentValue,\n    subscribe,\n  });\n}\n"]}