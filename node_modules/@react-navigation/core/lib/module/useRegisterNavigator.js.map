{"version":3,"sources":["useRegisterNavigator.tsx"],"names":["React","shortid","SingleNavigatorContext","useRegisterNavigator","useState","key","container","useContext","undefined","Error","useEffect","register","unregister"],"mappings":"iEAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,sBAAT,KAAuC,yBAAvC,CAMA,cAAe,SAASC,CAAAA,oBAAT,EAAgC,qBAC/BH,KAAK,CAACI,QAAN,CAAe,iBAAMH,CAAAA,OAAO,EAAb,EAAf,CAD+B,oDACtCI,GADsC,qBAE7C,GAAMC,CAAAA,SAAS,CAAGN,KAAK,CAACO,UAAN,CAAiBL,sBAAjB,CAAlB,CAEA,GAAII,SAAS,GAAKE,SAAlB,CAA6B,CAC3B,KAAM,IAAIC,CAAAA,KAAJ,CACJ,wFADI,CAAN,CAGD,CAEDT,KAAK,CAACU,SAAN,CAAgB,UAAM,IACZC,CAAAA,QADY,CACaL,SADb,CACZK,QADY,CACFC,UADE,CACaN,SADb,CACFM,UADE,CAGpBD,QAAQ,CAACN,GAAD,CAAR,CAEA,MAAO,kBAAMO,CAAAA,UAAU,CAACP,GAAD,CAAhB,EAAP,CACD,CAND,CAMG,CAACC,SAAD,CAAYD,GAAZ,CANH,EAOD","sourcesContent":["import * as React from 'react';\nimport shortid from 'shortid';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => shortid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n}\n"]}