import*as React from'react';import NavigationBuilderContext from'./NavigationBuilderContext';export default function useOnAction(_ref){var router=_ref.router,getState=_ref.getState,setState=_ref.setState,key=_ref.key,listeners=_ref.listeners,routerConfigOptions=_ref.routerConfigOptions;var _React$useContext=React.useContext(NavigationBuilderContext),onActionParent=_React$useContext.onAction,onRouteFocusParent=_React$useContext.onRouteFocus,addActionListenerParent=_React$useContext.addActionListener,trackAction=_React$useContext.trackAction;var routerConfigOptionsRef=React.useRef(routerConfigOptions);React.useEffect(function(){routerConfigOptionsRef.current=routerConfigOptions;});var onAction=React.useCallback(function(action){var visitedNavigators=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();var state=getState();if(visitedNavigators.has(state.key)){return false;}visitedNavigators.add(state.key);if(typeof action.target==='string'&&action.target!==state.key){return false;}var result=router.getStateForAction(state,action,routerConfigOptionsRef.current);result=result===null&&action.target===state.key?state:result;if(result!==null){trackAction(action);if(state!==result){setState(result);}if(onRouteFocusParent!==undefined){var shouldFocus=router.shouldActionChangeFocus(action);if(shouldFocus&&key!==undefined){onRouteFocusParent(key);}}return true;}if(onActionParent!==undefined){if(onActionParent(action,visitedNavigators)){return true;}}for(var i=listeners.length-1;i>=0;i--){var listener=listeners[i];if(listener(action,visitedNavigators)){return true;}}return false;},[getState,router,onActionParent,trackAction,onRouteFocusParent,setState,key,listeners]);React.useEffect(function(){return addActionListenerParent==null?void 0:addActionListenerParent(onAction);},[addActionListenerParent,onAction]);return onAction;}
//# sourceMappingURL=useOnAction.js.map