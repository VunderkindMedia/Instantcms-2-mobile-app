import _defineProperty from"@babel/runtime/helpers/defineProperty";import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import escape from'escape-string-regexp';import queryString from'query-string';export default function getStateFromPath(path){var _ref;var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var configs=(_ref=[]).concat.apply(_ref,_toConsumableArray(Object.keys(options).map(function(key){return createNormalizedConfigs(key,options);})));var result;var current;var remaining=path.replace(/[/]+/,'/').replace(/^\//,'').replace(/\?.*/,'');while(remaining){var routeNames=void 0;var params=void 0;var _loop=function _loop(config){var match=remaining.match(config.match);if(match){routeNames=config.routeNames;var paramPatterns=config.pattern.split('/').filter(function(p){return p.startsWith(':');});if(paramPatterns.length){params=paramPatterns.reduce(function(acc,p,i){var key=p.replace(/^:/,'');var value=match[i+1];acc[key]=config.parse&&config.parse[key]?config.parse[key](value):value;return acc;},{});}remaining=remaining.replace(match[0],'');return"break";}};for(var _iterator=configs,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref2;if(_isArray){if(_i>=_iterator.length)break;_ref2=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref2=_i.value;}var config=_ref2;var _ret=_loop(config);if(_ret==="break")break;}if(routeNames===undefined){var segments=remaining.split('/');routeNames=[decodeURIComponent(segments[0])];segments.shift();remaining=segments.join('/');}var state=void 0;if(routeNames.length===1){state={routes:[_objectSpread({name:routeNames.shift()},params&&{params:params})]};}else{state={routes:[{name:routeNames.shift(),state:{routes:[]}}]};var helper=state.routes[0].state;var _routeName=void 0;while(_routeName=routeNames.shift()){if(routeNames.length===0){helper.routes.push(_objectSpread({name:_routeName},params&&{params:params}));}else{helper.routes[0]={name:_routeName,state:{routes:[]}};helper=helper.routes[0].state;}}}if(current){while(current.routes[0].state){current=current.routes[0].state;}current.routes[0].state=state;}else{result=state;}current=state;}if(current==null||result==null){return undefined;}var query=path.split('?')[1];if(query){while(current.routes[0].state){current=current.routes[0].state;}var route=current.routes[0];var _params=queryString.parse(query);var parseFunction=findParseConfigForRoute(route.name,options);if(parseFunction){Object.keys(_params).forEach(function(name){if(parseFunction[name]&&typeof _params[name]==='string'){_params[name]=parseFunction[name](_params[name]);}});}route.params=_objectSpread({},route.params,{},_params);}return result;}function createNormalizedConfigs(key,routeConfig){var routeNames=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var configs=[];routeNames.push(key);var value=routeConfig[key];if(typeof value==='string'){configs.push(createConfigItem(routeNames,value));}else if(typeof value==='object'){Object.keys(value).forEach(function(nestedKey){if(nestedKey==='path'){configs.push(createConfigItem(routeNames,value[nestedKey],value.parse?value.parse:undefined));}else if(nestedKey==='parse'){}else{var result=createNormalizedConfigs(nestedKey,routeConfig[key],routeNames);configs.push.apply(configs,_toConsumableArray(result));}});}routeNames.pop();return configs;}function createConfigItem(routeNames,pattern,parse){var match=new RegExp('^'+escape(pattern).replace(/:[a-z0-9]+/gi,'([^/]+)')+'/?');return{match:match,pattern:pattern,routeNames:_toConsumableArray(routeNames),parse:parse};}function findParseConfigForRoute(routeName,config){if(config[routeName]){return config[routeName].parse;}for(var name in config){if(typeof config[name]==='object'){var parse=findParseConfigForRoute(routeName,config[name]);if(parse){return parse;}}}return undefined;}
//# sourceMappingURL=getStateFromPath.js.map