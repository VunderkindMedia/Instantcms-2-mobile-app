{"version":3,"sources":["useOnRouteFocus.tsx"],"names":["React","NavigationBuilderContext","useOnRouteFocus","router","getState","sourceRouteKey","key","setState","useContext","onRouteFocusParent","onRouteFocus","useCallback","state","result","getStateForRouteFocus","undefined"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,CAeA,cAAe,SAASC,CAAAA,eAAT,MAKK,IAJlBC,CAAAA,MAIkB,MAJlBA,MAIkB,CAHlBC,QAGkB,MAHlBA,QAGkB,CAFbC,cAEa,MAFlBC,GAEkB,CADlBC,QACkB,MADlBA,QACkB,uBAC2BP,KAAK,CAACQ,UAAN,CAC3CP,wBAD2C,CAD3B,CACIQ,kBADJ,mBACVC,YADU,CAKlB,MAAOV,CAAAA,KAAK,CAACW,WAAN,CACL,SAACL,GAAD,CAAiB,CACf,GAAMM,CAAAA,KAAK,CAAGR,QAAQ,EAAtB,CACA,GAAMS,CAAAA,MAAM,CAAGV,MAAM,CAACW,qBAAP,CAA6BF,KAA7B,CAAoCN,GAApC,CAAf,CAEA,GAAIO,MAAM,GAAKD,KAAf,CAAsB,CACpBL,QAAQ,CAACM,MAAD,CAAR,CACD,CAED,GAAIJ,kBAAkB,GAAKM,SAAvB,EAAoCV,cAAc,GAAKU,SAA3D,CAAsE,CACpEN,kBAAkB,CAACJ,cAAD,CAAlB,CACD,CACF,CAZI,CAaL,CAACD,QAAD,CAAWK,kBAAX,CAA+BN,MAA/B,CAAuCI,QAAvC,CAAiDF,cAAjD,CAbK,CAAP,CAeD","sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport { NavigationAction, NavigationState, Router } from './types';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport default function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n"]}