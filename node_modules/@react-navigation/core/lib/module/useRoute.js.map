{"version":3,"sources":["useRoute.tsx"],"names":["React","NavigationRouteContext","useRoute","route","useContext","undefined","Error"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CAQA,cAAe,SAASC,CAAAA,QAAT,EAER,CACL,GAAMC,CAAAA,KAAK,CAAGH,KAAK,CAACI,UAAN,CAAiBH,sBAAjB,CAAd,CAEA,GAAIE,KAAK,GAAKE,SAAd,CAAyB,CACvB,KAAM,IAAIC,CAAAA,KAAJ,CACJ,wEADI,CAAN,CAGD,CAED,MAAOH,CAAAA,KAAP,CACD","sourcesContent":["import * as React from 'react';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport { ParamListBase, RouteProp } from './types';\n\n/**\n * Hook to access the route prop of the parent screen anywhere.\n *\n * @returns Route prop of the parent screen.\n */\nexport default function useRoute<\n  T extends RouteProp<ParamListBase, string>\n>(): T {\n  const route = React.useContext(NavigationRouteContext);\n\n  if (route === undefined) {\n    throw new Error(\n      \"We couldn't find a route object. Is your component inside a navigator?\"\n    );\n  }\n\n  return route as T;\n}\n"]}