{"version":3,"sources":["useOnGetState.tsx"],"names":["React","NavigationBuilderContext","NavigationRouteContext","useOnGetState","getStateForRoute","getState","useContext","addStateGetter","route","key","getRehydratedState","useCallback","state","routes","map","useEffect"],"mappings":"+1BAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,CAEA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CAEA,cAAe,SAASC,CAAAA,aAAT,MAMZ,IALDC,CAAAA,gBAKC,MALDA,gBAKC,CAJDC,QAIC,MAJDA,QAIC,uBAC0BL,KAAK,CAACM,UAAN,CAAiBL,wBAAjB,CAD1B,CACOM,cADP,mBACOA,cADP,CAED,GAAMC,CAAAA,KAAK,CAAGR,KAAK,CAACM,UAAN,CAAiBJ,sBAAjB,CAAd,CACA,GAAMO,CAAAA,GAAG,CAAGD,KAAK,CAAGA,KAAK,CAACC,GAAT,CAAe,MAAhC,CAEA,GAAMC,CAAAA,kBAAkB,CAAGV,KAAK,CAACW,WAAN,CAAkB,UAAM,CACjD,GAAMC,CAAAA,KAAK,CAAGP,QAAQ,EAAtB,CACA,wBACKO,KADL,EAEEC,MAAM,CAAED,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,SAAAN,KAAK,0BACzBA,KADyB,EAE5BI,KAAK,CAAER,gBAAgB,CAACI,KAAK,CAACC,GAAP,CAFK,IAAtB,CAFV,GAOD,CAT0B,CASxB,CAACJ,QAAD,CAAWD,gBAAX,CATwB,CAA3B,CAWAJ,KAAK,CAACe,SAAN,CAAgB,UAAM,CACpB,MAAOR,CAAAA,cAAP,cAAOA,cAAc,CAAGE,GAAH,CAAQC,kBAAR,CAArB,CACD,CAFD,CAEG,CAACH,cAAD,CAAiBG,kBAAjB,CAAqCD,GAArC,CAFH,EAGD","sourcesContent":["import * as React from 'react';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport { NavigationState } from './types';\nimport NavigationRouteContext from './NavigationRouteContext';\n\nexport default function useOnGetState({\n  getStateForRoute,\n  getState,\n}: {\n  getStateForRoute: (routeName: string) => NavigationState | undefined;\n  getState: () => NavigationState;\n}) {\n  const { addStateGetter } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n    return {\n      ...state,\n      routes: state.routes.map(route => ({\n        ...route,\n        state: getStateForRoute(route.key),\n      })),\n    };\n  }, [getState, getStateForRoute]);\n\n  React.useEffect(() => {\n    return addStateGetter?.(key, getRehydratedState);\n  }, [addStateGetter, getRehydratedState, key]);\n}\n"]}