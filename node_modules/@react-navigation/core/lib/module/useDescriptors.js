import _defineProperty from"@babel/runtime/helpers/defineProperty";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";var _jsxFileName="/Users/osdnk/work/navigation-ex/packages/core/src/useDescriptors.tsx";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import SceneView from'./SceneView';import NavigationBuilderContext from'./NavigationBuilderContext';import useNavigationCache from'./useNavigationCache';export default function useDescriptors(_ref){var state=_ref.state,screens=_ref.screens,navigation=_ref.navigation,screenOptions=_ref.screenOptions,onAction=_ref.onAction,getState=_ref.getState,setState=_ref.setState,addActionListener=_ref.addActionListener,addFocusedListener=_ref.addFocusedListener,addStateGetter=_ref.addStateGetter,onRouteFocus=_ref.onRouteFocus,router=_ref.router,emitter=_ref.emitter;var _React$useState=React.useState({}),_React$useState2=_slicedToArray(_React$useState,2),options=_React$useState2[0],setOptions=_React$useState2[1];var _React$useContext=React.useContext(NavigationBuilderContext),trackAction=_React$useContext.trackAction;var context=React.useMemo(function(){return{navigation:navigation,onAction:onAction,addActionListener:addActionListener,addFocusedListener:addFocusedListener,addStateGetter:addStateGetter,onRouteFocus:onRouteFocus,trackAction:trackAction};},[navigation,onAction,addActionListener,addFocusedListener,onRouteFocus,addStateGetter,trackAction]);var navigations=useNavigationCache({state:state,getState:getState,navigation:navigation,setOptions:setOptions,router:router,emitter:emitter});return state.routes.reduce(function(acc,route){var screen=screens[route.name];var navigation=navigations[route.key];acc[route.key]={navigation:navigation,render:function render(){return React.createElement(NavigationBuilderContext.Provider,{key:route.key,value:context,__source:{fileName:_jsxFileName,lineNumber:113}},React.createElement(SceneView,{navigation:navigation,route:route,screen:screen,getState:getState,setState:setState,__source:{fileName:_jsxFileName,lineNumber:114}}));},options:_objectSpread({},typeof screenOptions==='object'||screenOptions==null?screenOptions:screenOptions({route:route,navigation:navigation}),{},typeof screen.options==='object'||screen.options==null?screen.options:screen.options({route:route,navigation:navigation}),{},options[route.key])};return acc;},{});}
//# sourceMappingURL=useDescriptors.js.map