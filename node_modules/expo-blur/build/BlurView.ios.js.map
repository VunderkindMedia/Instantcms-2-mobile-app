{"version":3,"file":"BlurView.ios.js","sourceRoot":"","sources":["../src/BlurView.ios.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,MAAM,kBAAkB,CAAC;AAChF,OAAO,SAAS,MAAM,YAAY,CAAC;AACnC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAI7D;IAAA,MAAqB,QAAS,SAAQ,KAAK,CAAC,SAAoB;QAAhE;;YAYE,UAAK,GAAsB,IAAI,CAAC;YAEhC,kBAAa,GAAG,CAAC,GAAsB,EAAE,EAAE;gBACzC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACnB,CAAC,CAAC;YAEF,mBAAc,GAAG,WAAW,CAAC,EAAE;gBAC7B,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,kBAAkB,CAAC,mBAAmB,CAAC,WAAW,CAAC,WAAW,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC7F;YACH,CAAC,CAAC;QAYJ,CAAC;QAVC,MAAM;YACJ,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACvC,OAAO,CACL,oBAAC,cAAc,oBACT,KAAK,IACT,GAAG,EAAE,IAAI,CAAC,aAAa,EACvB,KAAK,EAAE,CAAC,KAAK,EAAE,EAAE,eAAe,EAAE,aAAa,EAAE,CAAC,IAClD,CACH,CAAC;QACJ,CAAC;;IAhCM,kBAAS,GAAG;QACjB,GAAG,aAAa;QAChB,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,CAAe,CAAC,CAAC,UAAU;QAC5E,SAAS,EAAE,SAAS,CAAC,MAAM,CAAC,UAAU;KACvC,CAAC;IAEK,qBAAY,GAAG;QACpB,IAAI,EAAE,SAAqB;QAC3B,SAAS,EAAE,EAAE;KACd,CAAC;IAwBJ,eAAC;KAAA;eAlCoB,QAAQ;AAoC7B,MAAM,cAAc,GAAG,wBAAwB,CAAC,cAAc,CAAC,CAAC","sourcesContent":["import { NativeModulesProxy, requireNativeViewManager } from '@unimodules/core';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findNodeHandle, ViewPropTypes } from 'react-native';\n\nimport { BlurTint, ComponentOrHandle, BlurProps } from './BlurView.types';\n\nexport default class BlurView extends React.Component<BlurProps> {\n  static propTypes = {\n    ...ViewPropTypes,\n    tint: PropTypes.oneOf(['light', 'default', 'dark'] as BlurTint[]).isRequired,\n    intensity: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    tint: 'default' as BlurTint,\n    intensity: 50,\n  };\n\n  _root: ComponentOrHandle = null;\n\n  _setNativeRef = (ref: ComponentOrHandle) => {\n    this._root = ref;\n  };\n\n  setNativeProps = nativeProps => {\n    if (this._root) {\n      NativeModulesProxy.ExpoBlurViewManager.updateProps(nativeProps, findNodeHandle(this._root));\n    }\n  };\n\n  render() {\n    const { style, ...props } = this.props;\n    return (\n      <NativeBlurView\n        {...props}\n        ref={this._setNativeRef}\n        style={[style, { backgroundColor: 'transparent' }]}\n      />\n    );\n  }\n}\n\nconst NativeBlurView = requireNativeViewManager('ExpoBlurView');\n"]}